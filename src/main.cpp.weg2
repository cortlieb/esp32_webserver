#include <Arduino.h>
#include <Adafruit_NeoPixel.h>

#define LED_PIN 2
#define LED_COUNT 8

void colorWipe(uint32_t color, int wait);
void theaterChase(uint32_t color, int wait);
void rainbow(int wait);
void theaterChaseRainbow(int wait);

Adafruit_NeoPixel ring(LED_COUNT, LED_PIN, NEO_GRB + NEO_KHZ800);

void setup()
{
	ring.begin();
	ring.show();
	ring.setBrightness(50);
}
void loop()
{
	colorWipe(ring.Color(255, 0, 0), 50); // Red
	colorWipe(ring.Color(0, 255, 0), 50); // Green
	colorWipe(ring.Color(0, 0, 255), 50); // Blue

	theaterChase(ring.Color(127, 127, 127), 50); // White, half brightness
	theaterChase(ring.Color(127, 0, 0), 50);	 // Red, half brightness
	theaterChase(ring.Color(0, 0, 127), 50);	 // Blue, half brightness

	rainbow(10);			 // Flowing rainbow cycle along the whole ring
	theaterChaseRainbow(50); // Rainbow-enhanced theaterChase variant
}

void colorWipe(uint32_t color, int wait)
{
	for (int i = 0; i < ring.numPixels(); i++)
	{
		ring.setPixelColor(i, color);
		ring.show();
		delay(wait);
	}
}

void theaterChase(uint32_t color, int wait)
{
	for (int a = 0; a < 10; a++)
	{
		for (int b = 0; b < 3; b++)
		{
			ring.clear();
			for (int c = b; c < ring.numPixels(); c += 3)
			{
				ring.setPixelColor(c, color); // Set pixel 'c' to value 'color'
			}
			ring.show();
			delay(wait);
		}
	}
}

void rainbow(int wait)
{
	for (long firstPixelHue = 0; firstPixelHue < 5 * 65536; firstPixelHue += 256)
	{
		for (int i = 0; i < ring.numPixels(); i++)
		{
			int pixelHue = firstPixelHue + (i * 65536L / ring.numPixels());
			ring.setPixelColor(i, ring.gamma32(ring.ColorHSV(pixelHue)));
		}
		ring.show();
		delay(wait);
	}
}

void theaterChaseRainbow(int wait)
{
	int firstPixelHue = 0;
	// First pixel starts at red (hue 0)
	for (int a = 0; a < 30; a++)
	{
		for (int b = 0; b < 3; b++)
		{
			ring.clear();
			for (int c = b; c < ring.numPixels(); c += 3)
			{
				int
					hue = firstPixelHue + c * 65536L / ring.numPixels();
				uint32_t color = ring.gamma32(ring.ColorHSV(hue));
				ring.setPixelColor(c, color);
			}
			ring.show();
			delay(wait);
			firstPixelHue += 65536 / 90;
		}
	}
}